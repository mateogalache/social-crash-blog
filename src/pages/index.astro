---
import Portada from '@/components/Portada.astro';
import Article from '@/components/Article.astro';
import TopArticle from '@/components/TopArticle.astro';
import Layout from '../layouts/Layout.astro';
import { articles2 } from '../../configFireBase';


type ArticleType = {
  title: string;
  image: string;
  cleanTitle: string;
  category: string;
  phrase: string;
  newCategory: string;
  date: string;
};

const newArticles: ArticleType[] = [];
const today = new Date();
function formatDate(date: Date) { 
  const day = String(date.getDate()).padStart(2, '0');
  const month = String(date.getMonth() + 1).padStart(2, '0');
  const year = date.getFullYear();
  return `${year}-${month}-${day}`;
}

for (const article of articles2)
{
  console.log(article.date);
  if (article.date == formatDate(today))
  {
    newArticles.push(article);
  }
}

// Seleccionar 10 artículos aleatorios de articles2
function getRandomArticles(array: ArticleType[], count: number): ArticleType[] {
  const shuffled = array.sort(() => 0.5 - Math.random());
  return shuffled.slice(0, count);
}

const recentArticles = newArticles.slice(0, 3);
const olderArticles = newArticles.slice(3);
const randomArticles = getRandomArticles(articles2, 10);

---

<Layout title="Blog">
  <div class="justify-center flex-col flex p-12 px-[15%] py-20 text-white gap-2">
    <h1 class="text-2xl"><strong>LO ÚLTIMO</strong></h1>

    <div id="recent-articles-container" class="flex flex-wrap gap-5 mt-10 justify-center items-center w-[100%] opacity-0 transition-opacity duration-500 ease-out">
      {recentArticles.map((article, index) => (
        <div
          class="lg:w-[30%] recent-article transition-opacity duration-300 ease-out opacity-0 transform translate-y-10"
        >
          <Portada
            title={article.title}
            image={article.image}
            cleanTitle={article.cleanTitle}
            category={article.category}
            phrase={article.phrase}
            newCategory={article.newCategory}
          />
        </div>
      ))}
    </div>
    <div id="older-articles-container" class="border-t-2 border-t-red-500 mt-10 py-5 opacity-0 transition-opacity duration-500 ease-out">
      {olderArticles.map((article, index) => (
        <div
          class="older-article transition-opacity duration-300 ease-out opacity-0 transform translate-y-10"
        >
          <Article
            title={article.title}
            image={article.image}
            cleanTitle={article.cleanTitle}
            category={article.category}
            phrase={article.phrase}
            newCategory={article.newCategory}
          />
        </div>
      ))}
    </div>
    <h1 class="text-2xl"><strong>TENDENCIAS</strong></h1>

    <div class="top flex flex-wrap gap-14 w-[100%] justify-center mt-5">
      
      {randomArticles.map((article, index) => (
        <div
          class="older-article transition-opacity duration-300 lg:w-[16%] w-[100%] ease-out opacity-0 transform translate-y-10"
        >
          <TopArticle
            title={article.title}
            image={article.image}
            cleanTitle={article.cleanTitle}
            category={article.category}
            phrase={article.phrase}
            newCategory={article.newCategory}
            index = {index}
          />
        </div>
      ))}
    </div>
  </div>

  <script>
    document.addEventListener("DOMContentLoaded", function() {
      const recentArticlesContainer = document.getElementById('recent-articles-container');
      const olderArticlesContainer = document.getElementById('older-articles-container');
      const recentArticleElements = document.querySelectorAll('.recent-article');
      const olderArticleElements = document.querySelectorAll('.older-article');

      // Aplica la transición de opacidad a los contenedores de artículos
      requestAnimationFrame(() => {
        recentArticlesContainer?.classList.remove('opacity-0');
        recentArticlesContainer?.classList.add('opacity-100');
        olderArticlesContainer?.classList.remove('opacity-0');
        olderArticlesContainer?.classList.add('opacity-100');
      });

      // Aplica la transición a cada artículo reciente
      recentArticleElements.forEach((article, index) => {
        setTimeout(() => {
          article.classList.remove('opacity-0', 'translate-y-10');
          article.classList.add('opacity-100', 'translate-y-0');
        }, index * 100); // Añade un retraso para escalonar las animaciones
      });

      // Aplica la transición a cada artículo antiguo
      olderArticleElements.forEach((article, index) => {
        setTimeout(() => {
          article.classList.remove('opacity-0', 'translate-y-10');
          article.classList.add('opacity-100', 'translate-y-0');
        }, index * 100); // Añade un retraso para escalonar las animaciones
      });
    });
  </script>
</Layout>
